#!/bin/bash 

# pentestsetup.sh
# A simple bash script that I use to quickly setup and configure a pentesting OS after a fresh installation.


printf "Debian-based (APT Package Manager) Linux Post-Installation Pentesting Setup \n\n"
printf "TASK LIST -  \n"
printf "1. Opening my five favorite Firefox addons (uBlock, Wappalyzer, Netcraft, Shodan, and FoxyProxy)  \n"
printf "2. Downloading Elliot Alderson's Mr. Robot wallpaper  \n"
printf "3. Downloading Evil-WinRM, Impacket, LinEnum, and SecLists (/opt/)  \n"
printf "4. Installing Terminator terminal  \n"
printf "5. Adding bash profile aliases  \n"
printf "6. Installing some useful applications  \n"
printf "7. Downloading three custom wordlists  \n"
printf "\n\n\n\n"


printf "Opening webpages for useful browser extension...\n"
sleep 2
firefox https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/ & firefox https://addons.mozilla.org/en-US/firefox/addon/wappalyzer/ & firefox https://addons.mozilla.org/en-US/firefox/addon/netcraft-toolbar/ & firefox https://addons.mozilla.org/en-US/firefox/addon/shodan_io/ & firefox https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/ & firefox https://drive.google.com/drive/my-drive
printf "\n\n\n" 

# Downloading Elliot Alderson's wallpaper and applying to desktop background
printf "Downloading wallpaper...\n"
sleep 2
wget i.imgur.com/ozsp8gW.jpg 
printf "\n\n\n" 

# Creating folder on Desktop labeled 'tools' and installing Impacket and Evil-WinRM 
printf "Grabbing Evil-WinRM, Impacket, and LinEnum...\n"
sleep 2
cd /opt/
git clone https://github.com/SecureAuthCorp/impacket.git
git clone https://github.com/Hackplayers/evil-winrm.git
git clone https://github.com/rebootuser/LinEnum.git
git clone https://github.com/danielmiessler/SecLists.git
printf "\n\n\n"   

# Installing Terminator 
printf "Installing Terminator and configurations...\n"
sleep 2
sudo apt install terminator -y
> ~/.config/terminator/config
{
	sudo echo "[global_config]"
  	sudo echo "  [title_transmit_bg_color = \"#2e3436\""
	sudo echo "  title_inactive_bg_color = \"#000000\""
	sudo echo "[keybindings]"
	sudo echo "[profiles]"
	sudo echo "  [[default]]"
	sudo echo "    cursor_color = \"#aaaaaa\""
	sudo echo "    scrollback_infinite = True"
	sudo echo "[layouts]"
	sudo echo "  [[default]]"
	sudo echo "    [[[window0]]]"
	sudo echo "      type = Window"
	sudo echo "      parent = \"\""
	sudo echo "    [[[child1]]]"
	sudo echo "      type = Terminal"
	sudo echo "      parent = window0"
	sudo echo "[plugins]"
} >> ~/.config/terminator/config
printf "\n\n\n"  

# Adding some useful aliases to the bash profile
printf "Adding some useful aliases to the bash profile...\n"
sleep 2

# Networking Aliases
echo "alias eip='wget http://ipecho.net/plain -O - -q ; echo'" >> ~/.bashrc
echo "alias grepip='grep -oE \"\b([0-9]{1,3}\.){3}[0-9]{1,3}\b\"'" >> ~/.bashrc
echo "alias www = ‘python -m SimpleHTTPServer 8000’" >> ~/.bashrc
alias ports='netstat -a | grep -i "listen"'

# System Aliases
alias meminfo='free -m -l -t'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
alias cpuinfo='lscpu'
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'


# Terminal Preferences
echo "export PS1=\"\e[0;40m[\u@\h \W]\$ \e[m \"" >> ~/.bashrc
echo "alias lsa='ls -lah'" >> ~/.bashrc 
echo "alias aaa='cd ~/Desktop'" >> ~/.bashrc
alias c='clear'
alias dfh='df -h'
alias ...='cd ../..'
alias sfs='ls --human-readable --size -1 -S --classify'
alias smt='ls -t -1'
alias count='find . -type f | wc -l'


# Cryptographic Aliases
alias sha1='openssl sha1'
alias encrypt='function _encrypt() { openssl enc -aes-256-cbc -salt -in $1 -out $2; }; _encrypt'
alias decrypt='function _decrypt() { openssl enc -d -aes-256-cbc -in $1 -out $2; }; _decrypt'
echo "alias ncrip='openssl aes-256-cbc -a -in msg.txt && wipe -f msg.txt && touch msg.txt && echo " " && echo "Character Count Confirmation" && wc -m msg.txt'" >> ~/.bashrc

# Git Based Aliases
alias gst='git status' - This shows the current status of the git repository
alias gdiff='git diff' - This shows the differences between the current working tree and the last commit
alias gc='git commit -v' - This commits the changes along with the commit message
alias gb='git branch' - This shows the list of branches and highlights the current branch
alias gco='git checkout' - This allows you to switch between branches
alias ga='git add' - This adds files to the index
alias gd='git diff --name-status' - This shows the difference in terms of added, deleted or modified files
alias gpush='git push origin $(git rev-parse --abbrev-ref HEAD)' - This pushes the current branch to the origin
alias gpull='git pull origin $(git rev-parse --abbrev-ref HEAD)' - This pulls the changes from the origin for the current branch
alias gitlog='git log --graph --oneline --decorate --all' - This shows the git log in a more readable format with the graph, one-line format, decorations and for all branches

# MYSQL based Aliases
alias mysqlstart='sudo service mysql start' - This starts the MySQL service
alias mysqlstop='sudo service mysql stop' - This stops the MySQL service
alias mysqlstatus='sudo service mysql status' - This shows the status of MySQL service
alias mysqldump='mysqldump --user=username --password=password --databases db_name > db_name.sql' - This creates a backup of the MySQL database, with the given username, password and database name

#Java Developer Aliases
alias javac='function _javac() { javac -Xlint:unchecked $1; }; _javac' - This compiles a specified Java file with additional warnings for unchecked operations
alias java='function _java() { java -Xmx512M -Xss1024k $1; }; _java' - This runs a specified Java class with increased heap and stack sizes
alias javadoc='function _javadoc() { javadoc -private -d $1 $2; }; _javadoc' - This generates Java documentation for a specified package or class with private members included in the specified directory
alias mvn='function _mvn() { mvn clean install -Dmaven.test.skip=true; }; _mvn' - This runs a maven clean install command and skips test cases
alias mvnDebug='function _mvnDebug() { mvnDebug clean install; }; _mvnDebug' - This runs a maven in debug mode
alias gradle='function _gradle() { gradle --daemon --parallel --no-build-cache $1; }; _gradle' - This runs gradle with daemon, parallel and no-build-cache options
alias gradlew='function _gradlew() { ./gradlew --daemon --parallel --no-build-cache $1; }; _gradlew' - This runs gradle wrapper with daemon, parallel and no-build-cache options
alias jar='function _jar() { jar -xf $1; }; _jar' - This extract contents of the specified jar file
alias jps='function _jps() { jps -l; }; _jps' - This shows all the java processes running with their main class
alias jstack='function _jstack() { jstack -l $1; }; _jstack' - This shows the stack trace of a specified java process id

# Python Developer Aliases
alias py='function _py() { python $1; }; _py' - This runs the python command for the given file
alias pytest='function _pytest() { pytest --quiet $1; }; _pytest' - This runs the pytest command with the quiet option, which suppress unnecessary output
alias pipinstall='function _pipinstall() { pip install $1; }; _pipinstall' - This runs the pip install command for the given package
alias pipuninstall='function _pipuninstall() { pip uninstall $1; }; _pipuninstall' - This runs the pip uninstall command for the given package
alias pipupgrade='function _pipupgrade() { pip install --upgrade $1; }; _pipupgrade' - This runs the pip install command with an upgrade option for the given package
alias pythonpath='function _pythonpath() { export PYTHONPATH=$1:$PYTHONPATH; }; _pythonpath' - This exports the python path for the given directory
alias virtualenv='function _virtualenv() { virtualenv $1; }; _virtualenv' - This creates a new virtual environment with the given name
alias activatevenv='function _activatevenv() { source $1/bin/activate; }; _activatevenv' - This activates the virtual environment for the given path
alias deactivatevenv='function _deactivatevenv() { deactivate; }; _deactivatevenv' - This deactivates the current virtual environment
alias pylint='function _pylint() { pylint --quiet $1; }; _pylint' - This runs the pylint command with a quiet option, which suppresses unnecessary output
alias ve='python3 -m venv ./venv'
alias va='source ./venv/bin/activate'

printf "\n\n\n"  

# Install multiple programs - Irssi for IRC, Bleachbit for cleaning, Veil-Evasion for creating stealthy payloads, Cmatrix for hacker aesthetics, and Geany for an IDE
printf "Installing some applications...\n\n\n"
sleep 2
sudo apt install irssi -y
sudo apt install bleachbit -y
sudo apt install veil -y
sudo apt install cmatrix -y
sudo apt install geany -y 
sudo apt install speedtest-cli -y 
sudo apt install vim -y
sudo apt install htop -y
sudo apt install net-tools -y
sudo apt install build-essential -y
sudo apt install git -y
sudo apt install python3 -y
sudo apt install python3-pip -y
sudo apt install open-vm-tools -y
sudo apt install open-vm-tools-desktop -y
sudo apt install gobuster -y

printf "\n\n\n"  

# WILL BE ADDING CUSTOM WORDLIST DOWNLOADS VERY SOON

echo "FINISHING CHECK LIST"
echo "1. Configure network adapter settings to suit your preferences"
echo "2. Take snapshot if applicable" 
echo "3. Install updates/upgrades"
